import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException, WebDriverException 
import time

# =================================================================
# üîë CREDENCIAIS E CONFIGURA√á√ïES
# =================================================================

# --- ‚ö†Ô∏è PREENCHA AQUI SUAS CREDENCIAIS REAIS DO KWBET ‚ö†Ô∏è ---
KW_USER = "SEU_EMAIL_OU_USUARIO_AQUI" 
KW_PASS = "SUA_SENHA_AQUI"

# --- üç™ CONFIGURA√á√ÉO DE COOKIES (PARA IGNORAR O FORMUL√ÅRIO) üç™ ---
# Use essas vari√°veis se o LOGIN AUTOM√ÅTICO FALHAR.
# Se estiverem vazias, o bot tentar√° o login via formul√°rio.
KW_COOKIE_NAME = "NOME_DO_COOKIE_DE_SESSAO_AQUI" # Ex: "session_id" ou "auth_token"
KW_COOKIE_VALUE = "VALOR_DO_COOKIE_DE_SESSAO_AQUI" # O valor longo da sua sess√£o ativa
# ----------------------------------------

# URLs da Kwbet
LOGIN_URL = "https://kwbet.com/pt"
CRAPS_URL = "https://kwbet.com/pt/games/live-craps"

# XPATHs REVISADOS (Para a Kwbet - USO APENAS SE O COOKIE FALHAR)
SELECTORS = {
    # XPATH MAIS ABRANGENTE para o bot√£o 'ENTRAR'
    "login_open_button": "//button[text()='ENTRAR'] | //a[text()='ENTRAR'] | //*[contains(text(), 'ENTRAR') and not(contains(text(), 'REGISTRE'))]", 
    # XPATH gen√©rico final para o campo de Usu√°rio/Email
    "username_field": "//input[@name='username' or @name='email' or @id='username' or @id='email' or @type='text' or @type='email']",                  
    "password_field": "//input[@type='password']",                  
    "login_submit_button": "//button[@type='submit' or contains(text(), 'Entrar')]" 
}

# =================================================================
# ‚öôÔ∏è FUN√á√ïES
# =================================================================

def initialize_driver():
    """Inicializa o undetected_chromedriver com corre√ß√µes de compatibilidade (vers√£o 119)."""
    options = uc.ChromeOptions()
    options.add_argument('--headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')

    print("Configurando o Driver UC (Anti-Detec√ß√£o e Resolu√ß√£o Desktop)...")
    
    try:
        driver = uc.Chrome(
            options=options,
            version_main=119 # Corre√ß√£o cr√≠tica de compatibilidade
        ) 
        print("Driver inicializado com sucesso.")
        return driver
    except Exception as e:
        print(f"‚ùå ERRO AO INICIALIZAR O DRIVER UC. Falha de compatibilidade: {e}")
        raise 

def login_via_cookie(driver, cookie_name, cookie_value):
    """Tenta injetar um cookie de sess√£o para evitar o login pelo formul√°rio."""
    if not cookie_name or not cookie_value:
        print("AVISO: Cookies de sess√£o n√£o configurados. Tentando login via formul√°rio...")
        return False

    driver.get(LOGIN_URL)
    
    try:
        print(f"Tentando injetar cookie de sess√£o: {cookie_name}...")
        # Adicionar o cookie
        driver.add_cookie({
            'name': cookie_name,
            'value': cookie_value,
            'domain': 'kwbet.com',
            'path': '/',
            'secure': True,
            'httpOnly': True
        })
        
        # Recarregar a p√°gina para aplicar o cookie e verificar o login
        driver.get(LOGIN_URL)
        time.sleep(5)
        
        # Tenta encontrar um elemento que s√≥ aparece ap√≥s o login (ex: bot√£o de dep√≥sito, nome do usu√°rio).
        # Este √© um XPATH gen√©rico que voc√™ pode precisar ajustar.
        logged_in_element = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//button[contains(text(), 'Dep√≥sito') or contains(text(), 'Conta')]"))
        )
        
        print("‚úÖ LOGIN VIA COOKIE BEM-SUCEDIDO! Sess√£o injetada com sucesso.")
        return True
        
    except (TimeoutException, NoSuchElementException) as e:
        print("‚ùå FALHA NO LOGIN VIA COOKIE: O site n√£o reconheceu a sess√£o ou o cookie expirou.")
        print("Recomendado: Obtenha um novo cookie de sess√£o.")
        return False
    except WebDriverException as e:
        print(f"‚ùå ERRO CR√çTICO AO INJETAR COOKIE: {e}")
        return False


def login_to_form(driver, username, password):
    """Tenta realizar o login na Kwbet preenchendo o formul√°rio."""
    driver.get(LOGIN_URL)
    print("Tentando login via formul√°rio (Bot√£o 'ENTRAR')...")
    wait = WebDriverWait(driver, 25)

    try:
        # 1. CLICA NO BOT√ÉO 'ENTRAR' NA P√ÅGINA INICIAL (Abre o modal)
        print("Tentando abrir o modal de Login...")
        login_open_button = wait.until(
            EC.element_to_be_clickable((By.XPATH, SELECTORS["login_open_button"]))
        )
        login_open_button.click()
        print("‚úÖ Bot√£o 'ENTRAR' clicado. Aguardando modal...")
        time.sleep(3) 
        
        # 2. ENCONTRA E PREENCHE O CAMPO DE USU√ÅRIO
        print("Preenchendo Usu√°rio...")
        username_field = wait.until(
            EC.presence_of_element_located((By.XPATH, SELECTORS["username_field"]))
        )
        username_field.send_keys(username)
        print("‚úÖ Usu√°rio preenchido.")

        # 3. ENCONTRA E PREENCHE O CAMPO DE SENHA
        print("Preenchendo Senha...")
        password_field = wait.until(
            EC.presence_of_element_located((By.XPATH, SELECTORS["password_field"]))
        )
        password_field.send_keys(password)
        print("‚úÖ Senha preenchida.")

        # 4. CLICA NO BOT√ÉO FINAL DE SUBMISS√ÉO
        print("Clicando no bot√£o 'Entrar' final...")
        login_submit_button = wait.until(
            EC.element_to_be_clickable((By.XPATH, SELECTORS["login_submit_button"]))
        )
        login_submit_button.click()
        print("‚úÖ Bot√£o Entrar final clicado. Aguardando redirecionamento...")
        
        # 5. VERIFICA O SUCESSO DO LOGIN
        time.sleep(10)
        
        if driver.current_url != LOGIN_URL and "login" not in driver.current_url.lower():
            return True
        else:
            return False

    except (TimeoutException, NoSuchElementException) as e:
        print("\n=======================================================")
        print("‚ùå ERRO NO XPATH/TIMEOUT: O bot n√£o conseguiu encontrar um elemento na tela.")
        print("CAUSA: XPATHs gen√©ricos n√£o s√£o aceitos pela Kwbet. A √öNICA SOLU√á√ÉO RESTANTE √â USAR COOKIES.")
        print(f"DETALHES DO ERRO: {e}") 
        print("=======================================================\n")
        return False
    except Exception as e:
        print(f"‚ùå ERRO CR√çTICO INESPERADO DURANTE O LOGIN DE FORMUL√ÅRIO: {e}")
        return False

def navigate_to_craps(driver):
    """Navega diretamente para a p√°gina do Craps."""
    print(f"Navegando para o Craps: {CRAPS_URL}")
    driver.get(CRAPS_URL)
    WebDriverWait(driver, 20).until(
        EC.url_to_be(CRAPS_URL)
    )
    print("‚úÖ Chegou √† p√°gina do Craps. A p√°gina da Evolution deve estar carregada.")

# =================================================================
# üöÄ FUN√á√ÉO PRINCIPAL
# =================================================================

def run_bot():
    """Fluxo principal: Inicializa√ß√£o, Login (Cookie > Formul√°rio) e Navega√ß√£o."""
    driver = None
    login_success = False
    try:
        # 1. Inicializa o Driver
        driver = initialize_driver()
        
        # 2. Tenta Login por Cookie
        if KW_COOKIE_NAME and KW_COOKIE_VALUE:
            login_success = login_via_cookie(driver, KW_COOKIE_NAME, KW_COOKIE_VALUE)
        
        # 3. Se o Cookie falhar (ou n√£o estiver configurado), tenta o Formul√°rio
        if not login_success:
            login_success = login_to_form(driver, KW_USER, KW_PASS)
        
        if login_success:
            # 4. Navega para o Craps
            navigate_to_craps(driver)
            
            # 5. IN√çCIO DO LOOP DE LEITURA
            print("\n=======================================================")
            print("üöÄ SUCESSO! O bot est√° na p√°gina do Craps.")
            print("=======================================================\n")
            
            while True:
                # L√ìGICA DE LEITURA E APOSTA AQUI
                print("Bot em execu√ß√£o... (Loop de leitura/aposta)")
                time.sleep(15) 
            
        else:
            print("N√ÉO FOI POSS√çVEL CONTINUAR: O login falhou por todos os m√©todos.")

    except Exception as e:
        print(f"ERRO CR√çTICO NO FLUXO PRINCIPAL: {e}")
    finally:
        if driver:
            print("Fechando Driver.")
            driver.quit()

if __name__ == "__main__":
    run_bot()
